import { describe, expect, it } from '@jest/globals'
import { header, footer } from '../lib/comments.js'

describe('header', () => {
  it('contains `# Do NOT edit this file directly`', () => {
    const s = header({ subworkflows: [] })
    expect(s).toContain('# Do NOT edit this file directly')
  })

  it('contains `# Workflow generated automatically`', () => {
    const s = header({ subworkflows: [] })
    expect(s).toContain('# Workflow generated automatically')
  })

  it('does not contain `Subworkflows included` when there are none included', () => {
    const s = header({ subworkflows: [] })

    expect(s).not.toContain('Subworkflows included')
  })

  it('contains `Subworkflows included` and the list of subworkflows when there are some included', () => {
    const subworkflows = [
      { id: 'foo', filepath: 'workflows/foo.yaml' },
      { id: 'bar', filepath: 'workflows/bar/main.yaml' }
    ]
    const s = header({ subworkflows })

    expect(s).toContain('Subworkflows included')
    expect(s).toContain('foo')
    expect(s).toContain('workflows/foo.yaml')
    expect(s).toContain('bar')
    expect(s).toContain('workflows/bar/main.yaml')
  })
})

describe('footer', () => {
  it('does not contain `Subworkflows included` when there are none included', () => {
    const s = footer({ subworkflows: [] })

    expect(s).not.toContain('Subworkflows included')
  })

  it('contains `Subworkflows included` and the list of subworkflows when there are some included', () => {
    const subworkflows = [
      { id: 'foo', filepath: 'workflows/foo.yaml' },
      { id: 'bar', filepath: 'workflows/bar/main.yaml' }
    ]
    const s = footer({ subworkflows })

    expect(s).toContain('Subworkflows included')
    expect(s).toContain('foo')
    expect(s).toContain('workflows/foo.yaml')
    expect(s).toContain('bar')
    expect(s).toContain('workflows/bar/main.yaml')
  })
})
